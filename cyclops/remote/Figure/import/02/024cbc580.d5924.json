[1,["ecpdLyjvZBwrvm+cedCcQy","59ALywUfxDFJf6Bw5kGIqP","10/tUJdIlKyr7e2FC5VMfV","b2aHrECZ5APKGS/0d2hvT1","45uejkUHlF6KJFVd0NRLSh","7a/QZLET9IDreTiBfRn2PD","9d6I0AFCNNhrK5DxMf4Evi","8eM/2o3FBMYooy+TgR4vV7","d3zJ7mus5GGpmlKaoTwfIj","32RiGo7PBHjr1K4ISHsKyU","366lMlYKxPcbc/TgmzgFeE"],["node","root","_spriteFrame","_effectAsset","data","_file","_N$skeletonData","shineMaterial"],[["cc.Node",["_name","_active","_components","_prefab","_contentSize","_parent","_trs","_children"],1,9,4,5,1,7,2],["cc.PrefabInfo",["fileId","root","asset"],2,1,1],["cc.EffectAsset",["_name","shaders","techniques"],0],["cc.Material",["_name","_techniqueData"],1],["cc.Prefab",["_name"],2],["e361aFsBihJqapWXVGo3z3h",["node","figureFrames","shineMaterial"],3,1,3,6],["cc.ParticleSystem",["_custom","playOnLoad","totalParticles","duration","emissionRate","life","lifeVar","angle","angleVar","startSize","endSize","startSpinVar","endSpinVar","_positionType","speed","speedVar","tangentialAccel","tangentialAccelVar","radialAccel","radialAccelVar","startRadius","endRadius","endRadiusVar","node","_materials","_startColor","_startColorVar","_endColor","_endColorVar","posVar","gravity","_file","_spriteFrame"],-20,1,3,8,8,8,8,5,5,6,6],["cc.Sprite",["_sizeMode","node","_materials","_spriteFrame"],2,1,3,6],["sp.Skeleton",["defaultSkin","defaultAnimation","_preCacheMode","_animationName","node","_materials","_N$skeletonData"],-1,1,3,6]],[[1,0,1,2,2],[2,0,1,2,4],[3,0,1,3],[4,0,2],[0,0,7,2,3,4,2],[0,0,5,2,3,6,2],[0,0,5,2,3,4,2],[0,0,1,5,2,3,4,6,3],[5,0,1,2,1],[1,1,2,1],[1,0,1,2],[6,0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,24],[7,0,1,2,3,2],[8,0,1,2,3,4,5,6,5]],[[[[1,"autoshine-args",[{"hash":1648398661,"record":null,"name":"autoshine-args|vs|fs","glsl3":{"vert":"\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec4 v_color;\nuniform ARGS {\n  float left;\n  float right;\n  float top;\n  float bottom;\n  float angle;\n  float blur;\n};\n#if USE_TEXTURE\nin vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nfloat band(float t,float start,float end,float blur) {\n  float step1 = smoothstep(start - blur,start + blur,t);;\n  float step2 = smoothstep(end,end - blur,t);;\n  return step1 * step2;\n}\nfloat Rect(vec2 uv,float left,float right,float bottom,float top,float blur) {\n  float band1 = band(uv.x,left,right,blur);\n  float band2 = band(uv.y,bottom,top,blur);\n  return band1 * band2;\n}\nvec4 mainImage(vec4 color,vec2 uv) {\n  uv -= 0.5;\n  uv *= .8;\n  uv.y -= (1. * tan(angle * (uv.x - 0.3) - cc_time.x * 2.5));\n  vec3 rectColor = vec3(1.);\n  float rec = Rect(uv,left,right,bottom,top,blur);\n  if(color.a <= 0.1) {\n    return color;\n  }\n  color = mix(color.rgba,vec4(rectColor,1.),rec);\n  return color;\n}\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  o *= texture(texture, v_uv0);\n    #if CC_USE_ALPHA_ATLAS_TEXTURE\n    o.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n    #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  gl_FragColor = o;\n  vec2 uv = v_uv0;\n  uv.y = 1. - uv.y;\n  gl_FragColor = mainImage(o,uv);\n}"},"glsl1":{"vert":"\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}","frag":"\nprecision highp float;\n#if USE_ALPHA_TEST\n  uniform float alphaThreshold;\n#endif\nvoid ALPHA_TEST (in vec4 color) {\n  #if USE_ALPHA_TEST\n      if (color.a < alphaThreshold) discard;\n  #endif\n}\nvoid ALPHA_TEST (in float alpha) {\n  #if USE_ALPHA_TEST\n      if (alpha < alphaThreshold) discard;\n  #endif\n}\nuniform vec4 cc_time;\nvarying vec4 v_color;\nuniform float left;\nuniform float right;\nuniform float top;\nuniform float bottom;\nuniform float angle;\nuniform float blur;\n#if USE_TEXTURE\nvarying vec2 v_uv0;\nuniform sampler2D texture;\n#endif\nfloat band(float t,float start,float end,float blur) {\n  float step1 = smoothstep(start - blur,start + blur,t);;\n  float step2 = smoothstep(end,end - blur,t);;\n  return step1 * step2;\n}\nfloat Rect(vec2 uv,float left,float right,float bottom,float top,float blur) {\n  float band1 = band(uv.x,left,right,blur);\n  float band2 = band(uv.y,bottom,top,blur);\n  return band1 * band2;\n}\nvec4 mainImage(vec4 color,vec2 uv) {\n  uv -= 0.5;\n  uv *= .8;\n  uv.y -= (1. * tan(angle * (uv.x - 0.3) - cc_time.x * 2.5));\n  vec3 rectColor = vec3(1.);\n  float rec = Rect(uv,left,right,bottom,top,blur);\n  if(color.a <= 0.1) {\n    return color;\n  }\n  color = mix(color.rgba,vec4(rectColor,1.),rec);\n  return color;\n}\nvoid main () {\n  vec4 o = vec4(1, 1, 1, 1);\n  #if USE_TEXTURE\n  o *= texture2D(texture, v_uv0);\n    #if CC_USE_ALPHA_ATLAS_TEXTURE\n    o.a *= texture2D(texture, v_uv0 + vec2(0, 0.5)).r;\n    #endif\n  #endif\n  o *= v_color;\n  ALPHA_TEST(o);\n  gl_FragColor = o;\n  vec2 uv = v_uv0;\n  uv.y = 1. - uv.y;\n  gl_FragColor = mainImage(o,uv);\n}"},"builtins":{"globals":{"blocks":[{"name":"CCGlobal","defines":[]}],"samplers":[]},"locals":{"blocks":[{"name":"CCLocal","defines":[]}],"samplers":[]}},"defines":[{"name":"USE_TEXTURE","type":"boolean","defines":[]},{"name":"CC_USE_MODEL","type":"boolean","defines":[]},{"name":"USE_ALPHA_TEST","type":"boolean","defines":[]},{"name":"CC_USE_ALPHA_ATLAS_TEXTURE","type":"boolean","defines":["USE_TEXTURE"]}],"blocks":[{"name":"ALPHA_TEST","binding":0,"members":[{"name":"alphaThreshold","type":13,"count":1}],"defines":["USE_ALPHA_TEST"]},{"name":"ARGS","binding":1,"members":[{"name":"left","type":13,"count":1},{"name":"right","type":13,"count":1},{"name":"top","type":13,"count":1},{"name":"bottom","type":13,"count":1},{"name":"angle","type":13,"count":1},{"name":"blur","type":13,"count":1}],"defines":[]}],"samplers":[{"name":"texture","type":29,"count":1,"binding":30,"defines":["USE_TEXTURE"]}]}],[{"passes":[{"program":"autoshine-args|vs|fs","blendState":{"targets":[{"blend":true}]},"rasterizerState":{"cullMode":0},"properties":{"texture":{"value":"white","type":29},"alphaThreshold":{"type":13,"value":[0.5]},"left":{"type":13,"value":[-1]},"right":{"type":13,"value":[1]},"top":{"type":13,"value":[0.12]},"bottom":{"type":13,"value":[-0.12]},"angle":{"type":13,"value":[1.2]},"blur":{"type":13,"value":[0.9]}}}]}]]],0,0,[],[],[]],[[[2,"autoshine-args",{"0":{"props":{"left":-0.9,"right":0.9,"blur":0.8,"top":0.1,"bottom":-0.1},"defines":{"USE_TEXTURE":true}}}]],0,0,[0],[3],[2]],[[[3,"faceItem"],[4,"faceItem",[-3,-4,-5],[[8,-2,[7,8,9,10],11]],[9,-1,0],[5,50,50]],[5,"smoke",1,[[11,true,false,200,0.2,200,0.7,0.2,360,360,20,10,-80,50,1,10,100,-100,59.9,100,100,5,30,10,-7,[0],[4,753856239],[4,0],[4,33554431],[4,0],[0,5,0],[0,0,100],1,2]],[10,"c9bPEhek5PcbPHQq9ebnhv",-6],[-0.821,-20.335,0,0,0,0,1,1,1,1]],[6,"face",1,[[12,0,-8,[3],4]],[0,"e5swYPToNAj4EmnYaxJYVn",1,0],[5,50,50]],[7,"ice",false,1,[[13,"default","idle",0,"idle",-9,[5],6]],[0,"d2owDoo0lACJh5vqREg1D+",1,0],[5,512,508],[0.345,0.69,0,0,0,0,1,0.098,0.098,1]]],0,[0,1,1,0,0,1,0,-1,2,0,-2,3,0,-3,4,0,1,2,0,0,2,0,0,3,0,0,4,0,4,1,9],[0,0,0,0,0,0,0,0,0,0,0,0],[-1,5,2,-1,2,-1,6,-1,-2,-3,-4,7],[0,3,4,0,1,5,6,7,8,9,1,10]]]]